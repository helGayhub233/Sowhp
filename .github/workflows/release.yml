name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build for multiple platforms
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # 允许其他平台继续构建，即使某个平台失败
      matrix:
        include:
          - goos: windows
            goarch: amd64
            suffix: .exe
          - goos: windows
            goarch: arm64
            suffix: .exe
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
        go build -ldflags="-s -w" -o dist/sowhp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }} main.go
        ls -la dist/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sowhp-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/sowhp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Prepare release assets
      run: |
        cd dist
        for dir in */; do
          cd "$dir"
          for file in *; do
            if [[ "$file" == *"windows"* ]]; then
              zip "../${file%.exe}.zip" "$file"
            else
              tar -czf "../${file}.tar.gz" "$file"
            fi
          done
          cd ..
        done
        ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.zip
          dist/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}